// Mocks generated by Mockito 5.4.2 from annotations
// in test_task/test/domain/weather_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_task/core/local/isar_service.dart' as _i4;
import 'package:test_task/core/network/api_service.dart' as _i2;
import 'package:test_task/data/data_sources/local/weather_db_impl.dart' as _i7;
import 'package:test_task/data/data_sources/remote/weather_api_impl.dart'
    as _i5;
import 'package:test_task/data/model/local/weather_local.dart' as _i8;
import 'package:test_task/data/model/weather/weather_dto.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppApi_0 extends _i1.SmartFake implements _i2.AppApi {
  _FakeAppApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeatherDto_1 extends _i1.SmartFake implements _i3.WeatherDto {
  _FakeWeatherDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsarService_2 extends _i1.SmartFake implements _i4.IsarService {
  _FakeIsarService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherApiImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherApiImpl extends _i1.Mock implements _i5.WeatherApiImpl {
  MockWeatherApiImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppApi get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeAppApi_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.AppApi);

  @override
  _i6.Future<_i3.WeatherDto> fetchWeatherData({
    required String? lat,
    required String? lon,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWeatherData,
          [],
          {
            #lat: lat,
            #lon: lon,
          },
        ),
        returnValue: _i6.Future<_i3.WeatherDto>.value(_FakeWeatherDto_1(
          this,
          Invocation.method(
            #fetchWeatherData,
            [],
            {
              #lat: lat,
              #lon: lon,
            },
          ),
        )),
      ) as _i6.Future<_i3.WeatherDto>);

  @override
  _i6.Future<(double, double)> getCityLocation(String? city) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCityLocation,
          [city],
        ),
        returnValue: _i6.Future<(double, double)>.value((0.0, 0.0)),
      ) as _i6.Future<(double, double)>);
}

/// A class which mocks [WeatherDbImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherDbImpl extends _i1.Mock implements _i7.WeatherDbImpl {
  MockWeatherDbImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.IsarService get isarService => (super.noSuchMethod(
        Invocation.getter(#isarService),
        returnValue: _FakeIsarService_2(
          this,
          Invocation.getter(#isarService),
        ),
      ) as _i4.IsarService);

  @override
  _i6.Future<_i8.WeatherLocal?> getWeatherData() => (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
        ),
        returnValue: _i6.Future<_i8.WeatherLocal?>.value(),
      ) as _i6.Future<_i8.WeatherLocal?>);

  @override
  _i6.Future<void> saveWeatherData(_i8.WeatherLocal? weatherLocal) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWeatherData,
          [weatherLocal],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
